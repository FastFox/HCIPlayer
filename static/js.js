// Generated by CoffeeScript 1.3.3
var addTrackToPlaylist, playlistData, searchData, suggestionData;

playlistData = [];

suggestionData = [];

searchData = [];

$(document).ready(function() {
  return $('ul.list li').live('click', function(e) {
    return $(this).toggleClass('open closed').parent().children('.open').not(this).toggleClass('open closed');
  });
});

$('#playlist').live('pagebeforecreate', function() {
  $('#playlistItems .thumbup').live('click', function(e) {
    if ($(this).hasClass('liked')) {
      console.log('Like weghalen');
    } else {
      console.log('Like toevoegen');
    }
    return false;
  });
  $('#playlistItems .thumbdown').live('click', function(e) {
    if ($(this).hasClass('disliked')) {
      console.log('Dislike weghalen');
    } else {
      console.log('Dislike toevoegen');
    }
    return false;
  });
  $.templates({
    playlistItem: '#playlistItem'
  });
  return $.link.playlistItem('#playlistItems', playlistData);
});

addTrackToPlaylist = function(e) {
  var newTrack;
  $(e).toggleClass('addTrack trackAdded');
  $.observable(playlistData).insert(playlistData.length, $.view($(e).parent().parent()).data);
  newTrack = $('#playlistItems li:last').addClass('new');
  return setTimeout((function() {
    return newTrack.removeClass('new');
  }), 3000);
};

$('#addTrack').live('pagebeforecreate', function() {
  $('#searchSubmit').bind('click', function(e) {
    $('#searchResults').css('display', 'block');
    return $.ajax({
      type: 'POST',
      url: 'http://localhost:3000/search',
      data: {
        type: 'artist',
        query: $('#search-basic').val()
      },
      dataType: 'json',
      success: function(data) {
        console.log('hoi');
        console.log(data);
        return $.observable(searchData).refresh(data);
      }
    });
  });
  $('#searchItems .addTrack').live('click', function(e) {
    addTrackToPlaylist(this);
    /*
    		$(this).toggleClass 'addTrack trackAdded'
    		$.observable(playlistData).insert playlistData.length, $.view($(this).parent().parent()).data
    		newTrack = $('#playlistItems li:last').addClass 'new'
    		setTimeout ( ->
    			newTrack.removeClass 'new'
    		), 3000
    */

    return false;
  });
  $.templates({
    searchItem: '#searchItem'
  });
  return $.link.searchItem('#searchItems', searchData);
});

$('#getSuggestions').live('pagebeforecreate', function() {
  $('#suggestionItems .addTrack').live('click', function(e) {
    addTrackToPlaylist(this);
    /*
    		$(this).toggleClass 'addTrack trackAdded'
    		$.observable(playlistData).insert playlistData.length, $.view($(this).parent().parent()).data
    		newTrack = $('#playlistItems li:last').addClass 'new'
    		setTimeout ( ->
    			newTrack.removeClass 'new'
    		), 3000
    */

    return false;
  });
  $.templates({
    suggestionItem: '#suggestionItem'
  });
  return $.link.suggestionItem('#suggestionItems', suggestionData);
});
