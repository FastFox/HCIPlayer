// Generated by CoffeeScript 1.3.3
var addTrackToPlaylist, addTrackToPlaylistFromServer, playlistData, searchData, socket, suggestionData;

playlistData = [];

suggestionData = [];

searchData = [];

socket = io.connect(settings.url);

addTrackToPlaylist = function(e) {
  var data, newTrack;
  $(e).toggleClass('addTrack trackAdded');
  data = $.view($(e).parent().parent()).data;
  $.observable(playlistData).insert(playlistData.length, data);
  newTrack = $('#playlistItems li:last').addClass('new');
  setTimeout((function() {
    return newTrack.removeClass('new');
  }), 3000);
  console.log('hoi', socket);
  return socket.emit('addTrack', data);
};

addTrackToPlaylistFromServer = function(data) {
  var newTrack;
  $.observable(playlistData).insert(playlistData.length, data);
  newTrack = $('#playlistItems li:last').addClass('new');
  return setTimeout((function() {
    return newTrack.removeClass('new');
  }), 3000);
};

socket.on('setTitle', function(title) {
  return $('.title').text(title);
});

$(document).ready(function() {
  if (playlistData.length === 0) {
    $('.title').text('HCIPlayer');
  } else {
    $('.title').text(playlistData);
  }
  $('ul.list li').live('click', function(e) {
    return $(this).toggleClass('open closed').parent().children('.open').not(this).toggleClass('open closed');
  });
  socket.on('newTrack', function(data) {
    addTrackToPlaylistFromServer(data);
    return console.log(data);
  });
  socket.on('sugTrack', function(data) {
    return $.observable(suggestionData).insert(suggestionData.length, data);
  });
  return true;
});

$('#playlist').live('pagebeforecreate', function() {
  $('#playlistItems .thumbup').live('click', function(e) {
    $(this).toggleClass('liked');
    return false;
  });
  $('#playlistItems .thumbdown').live('click', function(e) {
    $(this).toggleClass('disliked');
    return false;
  });
  $.templates({
    playlistItem: '#playlistItem'
  });
  return $.link.playlistItem('#playlistItems', playlistData);
});

$('#addTrack').live('pagebeforecreate', function() {
  $('#searchSubmit').bind('click', function(e) {
    $.mobile.loading('show');
    return $.ajax({
      type: 'POST',
      url: settings.url + '/search',
      data: {
        type: 'artist',
        query: $('#search-basic').val()
      },
      dataType: 'json',
      success: function(data) {
        $.observable(searchData).refresh(data);
        $('#searchResults').css('display', 'block');
        return $.mobile.loading('hide');
      }
    });
  });
  $('#searchItems .addTrack').live('click', function(e) {
    addTrackToPlaylist(this);
    /*
    		$(this).toggleClass 'addTrack trackAdded'
    		$.observable(playlistData).insert playlistData.length, $.view($(this).parent().parent()).data
    		newTrack = $('#playlistItems li:last').addClass 'new'
    		setTimeout ( ->
    			newTrack.removeClass 'new'
    		), 3000
    */

    return false;
  });
  $.templates({
    searchItem: '#searchItem'
  });
  return $.link.searchItem('#searchItems', searchData);
});

$('#getSuggestions').live('pageshow', function() {});

$('#getSuggestions').live('pagebeforecreate', function() {
  socket.emit('reqSug');
  /*
  	$.ajax {
  			type: 'POST',
  			url: settings.url + '/suggestions',
  			data: { }
  			dataType: 'json', 
  			success: (data) ->
  				#console.log 'hoi'
  				#console.log data
  				#$.observable(searchData).data = data
  				$.observable(suggestionData).refresh data
  				#console.log $.observable(searchData)
  	}
  */

  $('#suggestionItems .addTrack').live('click', function(e) {
    addTrackToPlaylist(this);
    /*
    		$(this).toggleClass 'addTrack trackAdded'
    		$.observable(playlistData).insert playlistData.length, $.view($(this).parent().parent()).data
    		newTrack = $('#playlistItems li:last').addClass 'new'
    		setTimeout ( ->
    			newTrack.removeClass 'new'
    		), 3000
    */

    return false;
  });
  $.templates({
    suggestionItem: '#suggestionItem'
  });
  return $.link.suggestionItem('#suggestionItems', suggestionData);
});
