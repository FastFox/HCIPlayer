// Generated by CoffeeScript 1.3.3
var addTrackToPlaylist, addTrackToPlaylistFromServer, downVote, playlistData, searchData, socket, suggestionData, upVote;

playlistData = [];

suggestionData = [];

searchData = [];

socket = io.connect(settings.url);

addTrackToPlaylist = function(e) {
  var data, newTrack;
  data = $.view($(e).parent().parent()).data;
  data.up = 0;
  data.down = 0;
  $.observable(playlistData).insert(playlistData.length, data);
  newTrack = $('#playlistItems li:last').addClass('new');
  setTimeout((function() {
    return newTrack.removeClass('new');
  }), 3000);
  if (playlistData.length === 1) {
    $('.title').text(data.artist + ' — ' + data.title);
  }
  return socket.emit('addTrack', data);
};

addTrackToPlaylistFromServer = function(data) {
  var newTrack;
  $.observable(playlistData).insert(playlistData.length, data);
  newTrack = $('#playlistItems li:last').addClass('new');
  return setTimeout((function() {
    return newTrack.removeClass('new');
  }), 3000);
};

if (playlistData.length === 1) {
  $('.title').text(data.artist + ' — ' + data.title);
}

upVote = function(index, amount) {
  return $.observable(playlistData[index]).setProperty({
    up: playlistData[index].up + amount
  });
};

downVote = function(index, amount) {
  return $.observable(playlistData[index]).setProperty({
    down: playlistData[index].down + amount
  });
};

$(document).ready(function() {
  socket.emit('reqPlaylist', function(data) {
    return $.observable(playlistData).refresh(data);
  });
  /*
  	if playlistData.length == 0
  		$('.title').text 'HCIPlayer'
  	else
  		$('.title').text playlistData
  */

  socket.emit('reqSug', function(data) {
    return $.observable(suggestionData).refresh(data);
  });
  $('<img />')[0].src = '/images/thumbs_up.png';
  $('<img />')[0].src = '/images/thumbs_up_clicked.png';
  $('<img />')[0].src = '/images/thumbs_down.png';
  $('<img />')[0].src = '/images/thumbs_down_clicked.png';
  $('ul.list li').live('click', function(e) {
    var that;
    if ($(this).hasClass('open')) {
      return $(this).toggleClass('open closed');
    } else {
      $.mobile.loading('show');
      that = this;
      if ($.mobile.activePage.attr('id') === 'getSuggestions' && suggestionData[$(this).index()].album === '') {
        return socket.emit('trackInfo', $.observable(suggestionData).data()[$(this).index()].spotify, function(data) {
          $.observable(suggestionData[$(that).index()]).setProperty({
            album: data.album
          });
          $(that).toggleClass('open closed').parent().children('.open').not(that).toggleClass('open closed');
          return $.mobile.loading('hide');
        });
      } else if ($.mobile.activePage.attr('id') === 'addTrack' && searchData[$(this).index()].album === '') {
        return socket.emit('trackInfo', $.observable(searchData).data()[$(this).index()].spotify, function(data) {
          $.observable(searchData[$(that).index()]).setProperty({
            album: data.album
          });
          $(that).toggleClass('open closed').parent().children('.open').not(that).toggleClass('open closed');
          return $.mobile.loading('hide');
        });
      } else if ($.mobile.activePage.attr('id') === 'playlist' && playlistData[$(this).index()].album === '') {
        return socket.emit('trackInfo', $.observable(playlistData).data()[$(this).index()].spotify, function(data) {
          $.observable(playlistData[$(that).index()]).setProperty({
            album: data.album
          });
          $(that).toggleClass('open closed').parent().children('.open').not(that).toggleClass('open closed');
          return $.mobile.loading('hide');
        });
      } else {
        $(that).toggleClass('open closed').parent().children('.open').not(that).toggleClass('open closed');
        return $.mobile.loading('hide');
      }
    }
  });
  $('#settings a').bind('click', function(e) {
    $('#settings [data-theme="e"]').buttonMarkup({
      theme: 'c'
    });
    $(this).parent().parent().parent().buttonMarkup({
      theme: 'e'
    });
    $('#settings').popup('close');
    return false;
  });
  $('body').bind('swipeleft', function(e) {
    if ($.mobile.activePage.attr('id') === 'playlist') {
      return $.mobile.changePage($('#addTrack'), {
        transition: 'slide'
      });
    } else if ($.mobile.activePage.attr('id') === 'addTrack') {
      return $.mobile.changePage($('#getSuggestions'), {
        transition: 'slide'
      });
    }
  });
  $('body').bind('swiperight', function(e) {
    if ($.mobile.activePage.attr('id') === 'addTrack') {
      return $.mobile.changePage($('#playlist'), {
        transition: 'reverse slide'
      });
    } else if ($.mobile.activePage.attr('id') === 'getSuggestions') {
      return $.mobile.changePage($('#addTrack'), {
        transition: 'reverse slide'
      });
    }
  });
  socket.on('setTitle', function(title) {
    return $('.title').text(title);
  });
  socket.on('nextTrack', function() {
    $.observable(playlistData).remove(0, 1);
    return $('.title').text(playlistData[0].artist + ' — ' + playlistData[0].title);
  });
  socket.on('newTrack', function(data) {
    addTrackToPlaylistFromServer(data);
    if (playlistData.length === 1) {
      return $('.title').text(data.artist + ' — ' + data.title);
    }
  });
  socket.on('sugTrack', function(data) {
    return $.observable(suggestionData).insert(suggestionData.length, data);
  });
  socket.on('upVote', function(data) {
    return upVote(data.index, data.amount);
  });
  socket.on('downVote', function(data) {
    return downVote(data.index, data.amount);
  });
  return true;
});

$('#playlist').live('pagebeforecreate', function() {
  $('#playlistItems .thumbup').live('click', function(e) {
    var index;
    index = $(this).parent().parent().index();
    if ($(this).hasClass('liked')) {
      $(this).removeClass('liked');
      upVote(index, -1);
      socket.emit('upVote', index, -1);
    } else {
      if ($(this).next().hasClass('disliked')) {
        $(this).next().removeClass('disliked');
        downVote(index, -1);
        socket.emit('downVote', index, -1);
      }
      $(this).addClass('liked');
      upVote(index, 1);
      socket.emit('upVote', index, 1);
    }
    return false;
  });
  $('#playlistItems .thumbdown').live('click', function(e) {
    var index;
    index = $(this).parent().parent().index();
    if ($(this).hasClass('disliked')) {
      $(this).removeClass('disliked');
      downVote(index, -1);
      socket.emit('downVote', index, -1);
    } else {
      if ($(this).prev().hasClass('liked')) {
        $(this).prev().removeClass('liked');
        upVote(index, -1);
        socket.emit('upVote', index, -1);
      }
      $(this).addClass('disliked');
      downVote(index, 1);
      socket.emit('downVote', index, 1);
    }
    return false;
  });
  $.templates({
    playlistItem: '#playlistItem'
  });
  return $.link.playlistItem('#playlistItems', playlistData);
});

$('#addTrack').live('pagebeforecreate', function() {
  $('#searchSubmit').bind('click', function(e) {
    $.mobile.loading('show');
    return socket.emit('search', $('#search-basic').val(), function(data) {
      $.observable(searchData).refresh(data);
      $('#searchResults').css('display', 'block');
      return $.mobile.loading('hide');
    });
    /*	
    		$.ajax {
    			type: 'POST',
    			url: settings.url + '/search',
    			data: { type: 'artist', query: $('#search-basic').val() }
    			dataType: 'json', 
    			success: (data) ->
    				#console.log 'hoi'
    				#console.log data
    				#$.observable(searchData).data = data
    				$.observable(searchData).refresh data
    				$('#searchResults').css 'display', 'block'
    				$.mobile.loading 'hide'
    				#console.log $.observable(searchData)
    		}
    */

  });
  $('#searchItems .addTrack').live('click', function(e) {
    if ($(this).hasClass('addTrack')) {
      $(this).removeClass('addTrack').addClass('trackAdded');
    }
    addTrackToPlaylist(this);
    /*
    		$(this).toggleClass 'addTrack trackAdded'
    		$.observable(playlistData).insert playlistData.length, $.view($(this).parent().parent()).data
    		newTrack = $('#playlistItems li:last').addClass 'new'
    		setTimeout ( ->
    			newTrack.removeClass 'new'
    		), 3000
    */

    return false;
  });
  $.templates({
    searchItem: '#searchItem'
  });
  return $.link.searchItem('#searchItems', searchData);
});

$('#getSuggestions').live('pageshow', function() {});

$('#getSuggestions').live('pageinit', function() {
  $('#suggestionItems .addTrack').live('click', function(e) {
    if ($(this).hasClass('addTrack')) {
      $(this).removeClass('addTrack').addClass('trackAdded');
    }
    addTrackToPlaylist(this);
    return false;
  });
  $.templates({
    suggestionItem: '#suggestionItem'
  });
  return $.link.suggestionItem('#suggestionItems', suggestionData);
});
