// Generated by CoffeeScript 1.3.3
(function() {
  var app, echonest, express, http, io, nest, server, spotify;

  express = require('express');

  spotify = require('spotify');

  echonest = require('echonest');

  http = require('http');

  app = express();

  server = app.listen(3000);

  io = require('socket.io').listen(server);

  app.use(express["static"](__dirname + '/static'));

  app.use(express.bodyParser());

  nest = new echonest.Echonest({
    api_key: 'PCG7Z9OEOD91S20SU'
  });

  io.on('connection', function(socket) {
    return socket.on('addTrack', function(data) {
      return console.log(data);
    });
  });

  /*
  spotify.get  '/lookup/1/.json?uri=spotify:artist:4YrKBkKSVeqDamzBPWVnSJ', (err, res) ->
  	console.log res
  */


  app.post('/search', function(req, res) {
    return nest.song.search({
      combined: req.body.query,
      results: '15',
      sort: 'song_hotttnesss-desc',
      bucket: ['id:spotify-WW', 'tracks']
    }, function(error, response) {
      console.log(error);
      for( i = 0; i < response.songs.length; i++ ) {
			if( response.songs[i].tracks.length === 0 ) {
				response.songs.splice(i, 1);
				i--;
			}
		};

      console.log(response.songs);
      return res.json(response.songs);
    });
  });

  /*
  app.post '/search', (req, res) ->
  	console.log req.body.query, req.body.type
  	spotify.search { type: 'track',	query: req.body.query }, (err, data) ->
  		if err
  			console.log 'Error', err
  		else
  			#console.log err, data
  			res.json data.tracks.slice(0, 10);
  
  	#res.json hoi
  */


  app.post('/suggestions', function(req, res) {
    return nest.song.search({
      results: '25',
      sort: 'song_hotttnesss-desc',
      bucket: ['id:spotify-WW', 'tracks']
    }, function(error, response) {
      for( i = 0; i < response.songs.length; i++ ) {
			if( response.songs[i].tracks.length === 0 ) {
				response.songs.splice(i, 1);
				i--;
			}
		};
      return res.json(response.songs);
    });
  });

}).call(this);
